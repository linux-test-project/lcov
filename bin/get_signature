#!/usr/bin/env perl
#   Copyright (c) MediaTek USA Inc., 2022
#
#   This program is free software;  you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or (at
#   your option) any later version.
#
#   This program is distributed in the hope that it will be useful, but
#   WITHOUT ANY WARRANTY;  without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program;  if not, see
#   <http://www.gnu.org/licenses/>.
#
#
# get_signature
#
#   This is a sample script which uses uses md5sum to compare file versions
#   If the checksum is not the same - then line numbers, etc. may be different
#   and soem very strange errors may occur.
#   md5sum is not secure - so could use sha512sum or some other program, if we
#   really wanted to

use POSIX qw(strftime);
use Getopt::Long;

sub usage
{
    print(STDERR "usage: $0 --compare old_version new_version filename OR\n" .
          "       $0 filename\n");
}

my $compare;
if (!GetOptions("--compare" => \$compare) ||
    ($compare && scalar(@ARGV) != 3)) {
    usage();
    exit(1);
}

my $pathname = $ARGV[$compare ? 2 : 0];

if ($compare) {
    my ($old, $new) = @ARGV;
    exit($old ne $new);    # for the moment, just look for exact match
}

#my $sum = `sha512sum $pathname`;
my $sum = `md5sum $pathname`;
my $rtn = $?;
$sum =~ /^(\S+)/;
print($1 . "\n");
exit $rtn;

